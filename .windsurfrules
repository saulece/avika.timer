Global Windsurf Rules File – Avika

Mi sistema de construcción es local y manual (sin herramientas como Webpack o Vite). Todos los archivos están organizados directamente en el directorio del proyecto.

Mi app no utiliza ningún framework de JavaScript. Todo está construido con JavaScript puro (vanilla JS), HTML y CSS.

No modificar los siguientes archivos directamente:

avika-core.js: Contiene la lógica de negocio y estructura de datos principal.

avika-init.js: Maneja la inicialización de la app y debe mantenerse ligero y legible.

avika-style.css y avika-mobile.css: Estilos base y adaptaciones móviles cuidadosamente diseñados.

No agregar nuevas dependencias externas ni frameworks sin revisión previa. El proyecto debe permanecer libre de frameworks por motivos de rendimiento y simplicidad.

Se permite el uso de librerías ultra específicas como SheetJS solo para funciones concretas (ej. exportación a Excel).

Los datos de pedidos deben persistir en el almacenamiento local (localStorage) y deben poder restaurarse incluso después de una recarga de página. No modificar esta lógica sin pruebas exhaustivas.

Optimizar siempre para uso móvil: cualquier cambio en la UI debe verificarse en pantallas pequeñas y respetar el diseño táctil y el modo ultra-compacto.

No eliminar ni alterar las categorías de platillos ni los estados de pedidos (preparación, reparto, completado) sin consultar con el equipo de procesos.

Priorizar tiempos de respuesta rápidos en la interfaz. Evitar animaciones complejas o estructuras DOM innecesarias.

Mantener el código segmentado en módulos JS pequeños y bien documentados. No consolidar lógica en un solo archivo grande.

Cualquier funcionalidad nueva debe integrarse sin romper la compatibilidad con la exportación a Excel ni la persistencia local.

¿Quieres que lo genere también como archivo .txt o .md para que lo puedas guardar directamente en tu proyecto?







Dijiste:
Hazlas mas felixbles


ChatGPT dijo:
Perfecto, aquí tienes una versión más flexible y abierta del archivo de reglas para Cascade, manteniendo las bases pero dejando más margen para evolucionar el proyecto:

Global Windsurf Rules File – Avika (Versión Flexible)

La aplicación está construida con JavaScript puro (vanilla JS), HTML y CSS, pero se aceptan mejoras progresivas que no comprometan la ligereza ni la compatibilidad móvil.

Actualmente no usamos un sistema de construcción como Webpack o Vite, pero se puede considerar integrar uno si mejora el mantenimiento o escalabilidad del proyecto.

Evitar modificaciones directas a los siguientes archivos sin una razón clara o sin pruebas:

avika-core.js: contiene la lógica de negocio y datos principales.

avika-init.js: controla la inicialización general.

avika-style.css y avika-mobile.css: definen el estilo visual base.

El uso de librerías externas debe evaluarse con criterio: se permite si aportan una mejora significativa y no complican la experiencia del usuario ni el mantenimiento.

La exportación a Excel actualmente depende de SheetJS. Se pueden explorar otras opciones siempre que mantengan la funcionalidad.

La lógica de persistencia en localStorage es clave para la experiencia. Cualquier cambio debe asegurar que los pedidos y sus estados puedan recuperarse después de recargar la página.

La interfaz debe seguir siendo rápida, clara y fácil de usar en pantallas móviles. Nuevas funciones deben seguir esta filosofía.

Los estados de pedido (En preparación, En reparto, Completado) y las categorías de platillos se pueden ampliar si se hace de forma organizada y coherente con la estructura actual.

La estructura modular del código es preferida, pero se acepta reorganizar o consolidar archivos si mejora la claridad o eficiencia del proyecto.

Los cambios deben buscar siempre mejorar la experiencia de uso en cocina o en condiciones de alta demanda, priorizando fluidez y facilidad sobre lo visual o técnico.